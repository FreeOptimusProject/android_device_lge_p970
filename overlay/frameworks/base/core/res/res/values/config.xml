<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2012, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds. -->
<resources>
    <!-- Flag indicating whether the surface flinger is inefficient
         at performing a blur.  Used by parts of the UI to turn off
         the blur effect where it isn't worth the performance hit. -->
    <bool name="config_sf_slowBlur">false</bool>

    <!-- Flag indicating whether we should enable the automatic brightness in Settings.
         config_hardware_automatic_brightness_available is not set, so we will use software implementation -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- There is no charging LED. -->
    <bool name="config_unplugTurnsOnScreen">true</bool>

    <!-- enable electron beam -->
    <bool name="config_animateScreenLights">false</bool>

    <bool name="config_disableMenuKeyInLockScreen">true</bool>

    <!-- Component name of the service providing network location support. -->
    <string name="config_networkLocationProvider">com.google.android.location.NetworkLocationProvider</string>

    <!-- Component name of the service providing geocoder API support. -->
    <string name="config_geocodeProvider">com.google.android.location.GeocodeProvider</string>

    <string-array translatable="false" name="config_tether_usb_regexs">
    <item>"usb0"</item>
    </string-array>

    <string-array translatable="false" name="networkAttributes">
        <item>"wifi,1,1,2,-1,true"</item>
        <item>"mobile,0,0,1,-1,true"</item>
        <item>"mobile_mms,2,0,2,60000,true"</item>
        <item>"mobile_supl,3,0,3,60000,true"</item>
        <item>"mobile_dun,4,0,3,60000,true"</item>
        <item>"mobile_hipri,5,0,4,60000,true"</item>
        <item>"mobile_bluetooth,7,7,1,-1,true"</item>
        <item>"wifi_p2p,13,1,0,-1,true"</item>
     </string-array>

    <!-- This string array should be overridden by the device to present a list of radio
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
                      [# simultaneous connection types]"  -->
    <string-array translatable="false" name="radioAttributes">
        <item>"1,1"</item>
        <item>"0,1"</item>
        <item>"4,1"</item>
        <item>"7,1"</item>
    </string-array>

    <!-- Boolean indicating whether the wifi chipset has p2p support -->
    <bool translatable="false" name="config_wifi_p2p_support">true</bool>

    <!-- Regex array of allowable upstream ifaces for tethering - for example if you want
         tethering on a new interface called "foo2" add <item>"foo\\d"</item> to the array
        <string-array translatable="false" name="config_tether_upstream_regexs">
            <item>"wlan0"</item>
            <item>"vsnet\\d"</item>
        </string-array>
    -->

    <string-array translatable="false" name="config_tether_wifi_regexs">
        <item>"wlan0"</item>
    </string-array>

    <bool name="config_automatic_brightness_available">true</bool>

    <!-- These are all dummies, but need to be present to enable UI control of auto-brightness
         The actual control and values are all in-kernel -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>5</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
    -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>10</item>
        <item>35</item>
        <item>55</item>
        <item>70</item>
        <item>70</item>
        <item>250</item>
    </integer-array>

    <!-- Array of output values for button backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessButtonBacklightValues">
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
    </integer-array>

    <!-- Array of output values for keyboard backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessKeyboardBacklightValues">
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
    </integer-array>

    <!-- Minimum screen brightness allowed by the power manager. -->
    <integer name="config_screenBrightnessDim">10</integer>

    <!-- The default iface on which to monitor data use -->
    <string name="config_datause_iface">rmnet0</string>

    <string name="default_wallpaper_component">@null</string>

</resources>
